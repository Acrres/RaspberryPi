{
  "__inputs": [
    {
      "name": "DS_ACRRES_PI",
      "label": "Acrres PI",
      "description": "",
      "type": "datasource",
      "pluginId": "mysql",
      "pluginName": "MySQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "4.6.2"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "mysql",
      "name": "MySQL",
      "version": "1.0.0"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "hideControls": false,
  "id": null,
  "links": [],
  "refresh": false,
  "rows": [
    {
      "collapse": false,
      "height": 461,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_ACRRES_PI}",
          "fill": 1,
          "id": 1,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "span": 12,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "",
              "dsType": "influxdb",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  GroupA_L1_P+GroupA_L2_P+GroupA_L3_P as value,\n  'GroupA_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  GroupB_L1_P+GroupB_L2_P+GroupB_L3_P as value,\n  'GroupB_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "B"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group1_L1_P+Group1_L2_P+Group1_L3_P as value,\n  'Group1_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "C"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group2_L1_P+Group2_L2_P+Group2_L3_P as value,\n  'Group2_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "D"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group3_L1_P+Group3_L2_P+Group3_L3_P as value,\n  'Group3_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "E"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group4_L1_P+Group4_L2_P+Group4_L3_P as value,\n  'Group4_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "F"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group5_L1_P+Group5_L2_P+Group5_L3_P as value,\n  'Group5_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "G"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group6_L1_P+Group6_L2_P+Group6_L3_P as value,\n  'Group6_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "H"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group7_L1_P+Group7_L2_P+Group7_L3_P as value,\n  'Group7_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "I"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group8_L1_P+Group8_L2_P+Group8_L3_P as value,\n  'Group8_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "J"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group9_L1_P+Group9_L2_P+Group9_L3_P as value,\n  'Group9_P' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "K"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Powers grouped per group",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        }
      ],
      "repeat": null,
      "repeatIteration": null,
      "repeatRowId": null,
      "showTitle": false,
      "title": "Dashboard Row",
      "titleSize": "h6"
    },
    {
      "collapse": false,
      "height": 306,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_ACRRES_PI}",
          "fill": 1,
          "id": 3,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "span": 12,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "",
              "dsType": "influxdb",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  (GroupA_L1_f+GroupA_L2_f+GroupA_L3_f)/3 as value,\n  'Gridbus frequency' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  (GroupB_L1_f+GroupB_L2_f+GroupB_L3_f)/3 as value,\n  'Testbus frequency' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Frequency per bus",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": "52",
              "min": "48",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": "52",
              "min": "48",
              "show": true
            }
          ]
        }
      ],
      "repeat": null,
      "repeatIteration": null,
      "repeatRowId": null,
      "showTitle": false,
      "title": "Dashboard Row",
      "titleSize": "h6"
    },
    {
      "collapse": false,
      "height": 407,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_ACRRES_PI}",
          "fill": 1,
          "id": 2,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "span": 6,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "",
              "dsType": "influxdb",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group1_3F_Auto_relay_control_battery_bus as value,\n  'Group1_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group2_3F_Auto_relay_control_battery_bus as value,\n  'Group2_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "B"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group3_3F_Auto_relay_control_battery_bus as value,\n  'Group3_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "C"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group4_3F_Auto_relay_control_battery_bus as value,\n  'Group4_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "D"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group5_3F_Auto_relay_control_battery_bus as value,\n  'Group5_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "E"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group6_3F_Auto_relay_control_battery_bus as value,\n  'Group6_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "F"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group7_3F_Auto_relay_control_battery_bus as value,\n  'Group7_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "G"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group8_3F_Auto_relay_control_battery_bus as value,\n  'Group8_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "H"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group9_3F_Auto_relay_control_battery_bus as value,\n  'Group9_3F_Auto_relay_control_battery_bus' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "I"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Groups switched to (battery) testbus",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_ACRRES_PI}",
          "fill": 1,
          "id": 4,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "span": 6,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "",
              "dsType": "influxdb",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group1_3F_Auto_relay_control_battery_bus as value,\n  'Group1_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group2_3F_Auto_relay_control_battery_bus as value,\n  'Group2_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "B"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group3_3F_Auto_relay_control_battery_bus as value,\n  'Group3_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "C"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group4_3F_Auto_relay_control_battery_bus as value,\n  'Group4_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "D"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group5_3F_Auto_relay_control_battery_bus as value,\n  'Group5_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "E"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group6_3F_Auto_relay_control_battery_bus as value,\n  'Group6_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "F"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group7_3F_Auto_relay_control_battery_bus as value,\n  'Group7_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "G"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group8_3F_Auto_relay_control_battery_bus as value,\n  'Group8_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "H"
            },
            {
              "alias": "",
              "format": "time_series",
              "rawSql": "SELECT\n  ROUND(datetime) as time_sec,\n  Group9_3F_Auto_relay_control_battery_bus as value,\n  'Group9_3F_Selector_auto_bus_select' as metric\nFROM system_state_array_log\nWHERE ROUND(datetime) > $__unixEpochFrom() AND round(datetime,0) < $__unixEpochTo()\nORDER BY datetime ASC\n",
              "refId": "I"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeShift": null,
          "title": "Groups automatically switched",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        }
      ],
      "repeat": null,
      "repeatIteration": null,
      "repeatRowId": null,
      "showTitle": false,
      "title": "Dashboard Row",
      "titleSize": "h6"
    }
  ],
  "schemaVersion": 14,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "2018-01-30T08:28:22.972Z",
    "to": "2018-01-30T10:12:07.245Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Acrres",
  "version": 9
}